inherit_from: experiments/config_3RScan_base.yaml
model:
 method: imp
 multi_rel: true # multiple relationship 
 spatial_encoder:
  method: fc #[none,fc]
  dim: 128
 image_encoder:
  backend: vgg16 #[vgg16,res18]
  img_batch_size: 8 # this is the batch processing limit. if input is larger, the maximum batch process will still be 4.
  backend_finetune: false # only works for the standard backend
  use_global: true
  roi_region: [3,3]
  aggr: max # aggrigation method [mean, max, sum]
  with_bn: false
  hidden: 1024
  drop_out: 0.3
  local_feature_dim: 64
 gnn:
  method: imp # [none, fan, triplet]
  hidden_dim: 512
  num_layers: 2
  aggr: sum
data:
 input_type: sgfn #[3RScan, graph, sgfn, sgpn]
 img_feature_path: "/media/sc/SSD1TB/storage/kf_feature/"
 label_file: "labels.instances.align.annotated.v2.ply"
 roi_img_path: "/media/sc/SSD1TB/dataset/3RScan/roi_images.h5"
 path_image_feature: "./data/3RScan/"
 sample_in_runtime: true
 is_roi_img: false
 load_images: true
 load_points: false
 load_cache: false
 sample_num_nn: 2
 sample_num_seed: 4
 drop_img_edge: 32 # if is int and >0, select given number. if is float/double, select percentage between [1-x,1]
 drop_img_edge_eval: 0
 drop_edge: 0.5 # if is int and >0, select given number. if is float/double, select percentage between [1-x,1]
 drop_edge_eval: 0 # if is int and >0, select given number. if is float/double, select percentage between [1-x,1]
 normalize_weight: true 
 max_num_node: 64 # maximum number of nodes for training (memory)
 max_num_edge: -1 # maximum number of edges for training (to save memory)
 img_size: -1 # minimum image edge will be resize to this. (-1: keep origianl)
 use_precompute_img_feature: false
